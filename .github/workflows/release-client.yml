# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

on:
   push:
      tags:
# Sequence of patterns matched against refs/tags
      - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: release-pluvia

jobs:
   create-release-job:
      name: create-release-job
      runs-on: ubuntu-latest
      outputs:
         output1: ${{ steps.create_release.outputs.upload_url }}
         output2: ${{ github.ref_name }}
      steps:
      -  name: checkout-code-step
         uses: actions/checkout@v3
      -  name: set-up-jdk-17-step
         uses: actions/setup-java@v3
         with:
            java-version: '17'
            distribution: adopt
      -  name: create-release-step
         id: create_release
         uses: actions/create-release@v1
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
         with:
            tag_name: ${{ github.ref }}
            release_name: ${{ github.ref }}
            body: |
               TBD
            draft: false
            prerelease: false
#   build-windows-job:
   build-mac-job:
      name: build-mac-job
      runs-on: macos-latest
#      name: build-windows-job
#      runs-on: windows-latest
#      runs-on: self-hosted
#      needs: create-release-job
#      steps:
#      -  name: checkout-code-step
#         uses: actions/checkout@v3
#      -  name: set-up-jdk-17-step
#         uses: actions/setup-java@v3
#         with:
#            java-version: '17'
#            distribution: adopt
#      -  name: build-with-maven-step
#         env:
#           TAG_NAME: ${{ needs.create-release-job.outputs.output2 }}
#         run: mvn verify --batch-mode --update-snapshots package
#      -  name: upload-msi-step
#         uses: actions/upload-release-asset@v1
#         env:
#            GITHUB_TOKEN: ${{ github.token }}
#         with:
#            upload_url: ${{ needs.create-release-job.outputs.output1 }}
#            asset_path: ./target/installer/pluvia-${{ needs.create-release-job.outputs.output2 }}.msi
#            asset_name: pluvia.msi
#            asset_content_type:  	application/octet-stream
#   build-ubuntu-job:
#      name: build-ubuntu-job
#      runs-on: ubuntu-latest
#      needs: create-release-job
#      steps:
#      -  name: checkout-code-step
#         uses: actions/checkout@v3
#      -  name: set-up-jdk-17-step
#         uses: actions/setup-java@v3
#         with:
#            java-version: '17'
#            distribution: adopt
#      -  name: build-with-maven-step
#         env:
#           TAG_NAME: ${{ needs.create-release-job.outputs.output2 }}
#         run: mvn verify --batch-mode --update-snapshots package
#      -  name: upload-deb-step
#         uses: actions/upload-release-asset@v1
#         env:
#            GITHUB_TOKEN: ${{ github.token }}
#         with:
#            upload_url: ${{ needs.create-release-job.outputs.output1 }}
#            asset_path: ./target/installer/pluvia_${{ needs.create-release-job.outputs.output2 }}-1_amd64.deb
#            asset_name: pluvia.deb
#            asset_content_type:  	application/octet-stream
#      -  name: upload-rpm-step
#         uses: actions/upload-release-asset@v1
#         env:
#            GITHUB_TOKEN: ${{ github.token }}
#         with:
#            upload_url: ${{ needs.create-release-job.outputs.output1 }}
#            asset_path: ./target/installer/pluvia-${{ needs.create-release-job.outputs.output2 }}-1.x86_64.rpm
#            asset_name: pluvia.rpm
#            asset_content_type:  	application/octet-stream
      needs: create-release-job
      steps:
      -  name: checkout-code-step
         uses: actions/checkout@v3
      -  name: set-up-jdk-17-step
         uses: actions/setup-java@v3
         with:
            java-version: '17'
            distribution: adopt
      -  name: build-with-maven-step
         env:
            TAG_NAME: ${{ needs.create-release-job.outputs.output2 }}
         run: mvn verify --batch-mode --update-snapshots package
      -  name: upload-pkg-step
         uses: actions/upload-release-asset@v1
         env:
            GITHUB_TOKEN: ${{ github.token }}
         with:
            upload_url: ${{ needs.create-release-job.outputs.output1 }}
            asset_path: ./target/installer/pluvia-${{ needs.create-release-job.outputs.output2 }}.pkg
            asset_name: pluvia.pkg
            asset_content_type: application/octet-stream